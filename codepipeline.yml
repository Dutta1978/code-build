#==================================================================================================
# Deploy:
# 
# 1.AWS EC2 and RDS public acess check
#
# 2.If EC2 and RDS detected with public access it gets stopped
#
# 3. Stopped resources logged in Dynamodb table and notification is sent via Slack and SNS
#
# (c) Enquizit, Inc 2021
# v1.0 2021-01-29
#===================================================================================================

AWSTemplateFormatVersion: '2010-09-09'
Description: >

  It will creates a continuous deployment pipeline which pulls
  code from GitHub, builds via CodeBuild, and deploys via CloudFormation.

Parameters:
  ApplicationName: 
    Description: "Used to name resources provisioned by this template"
    Type: String
    AllowedPattern: '[A-Za-z0-9-]+'
        
  GitHubUser:
    Description: "The GitHub username which owns the repository to be deployed"
    Type: String

  GitHubRepository:
    Description: "The name of the repository to deploy"
    Type: String

  GitHubRepositoryUrl:
    Description: "The name of the repository Url"
    Type: String    

  GitHubBranch:
    Description: "The branch of the repository to deploy"
    Type: String
    Default: "main"

  GitHubOAuthToken: 
    Description: "Create a token with 'repo' and 'admin:repo_hook' permissions here https://github.com/settings/tokens"
    Type: String   
    NoEcho: true

  StackSetName: 
    Description: Name of stackset
    Type: String
    Default: huit-public-compliance-child-account

  AccountNumber:
    Description: Account where stackset instance is deployed
    Type: String
    Default: 947827719635    

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label: 
          default: Application Configuration
        Parameters:
          - ApplicationName
      - Label:
          default: GitHub Configuration
        Parameters:
          - GitHubUser
          - GitHubRepository
          - GitHubBranch
          - GitHubOAuthToken
    ParameterLabels:
      ApplicationName: 
        default: Application Name
      GitHubRepository: 
        default: Repository Name
      GitHubUser: 
        default: Repository Owner
      GitHubBranch: 
        default: Repository Branch
      GitHubOAuthToken: 
        default: OAuth Token

Resources:
  
  # S3 bucket for build artifacts

  S3Builds:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub "${ApplicationName}-build"
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
      Tags:
        - Key: source
          Value: !Ref ApplicationName

  # CodePipeline/CodeBuild/CodeDeploy

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref ApplicationName
      RoleArn: !GetAtt CodePipelineRole.Arn
      RestartExecutionOnUpdate: false
      ArtifactStore: 
        Type: S3
        Location: !Ref S3Builds
      Stages:
        - Name: Source
          Actions:
            - Name: TemplateSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                -  Name: CFT_Source
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepository
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: false

            - Name: Smoke
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                -  Name: SmokeTest_Source
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepository
                Branch: smoke
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: false               
                                
        - Name: BuildStack
          Actions:
            - Name: BuildStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation  
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !Sub "${CodePipelineCloudFormationRole.Arn}"
                Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                StackName: !Sub "${ApplicationName}-prod"
                TemplatePath: CFT_Source::huit-public-resources-master-account.yml
                TemplateConfiguration: CFT_Source::params.json
              InputArtifacts:
                -  Name: CFT_Source

        - Name: CreateStackset
          Actions:
            - Name: BuildStackset
              InputArtifacts:
                - Name: SmokeTest_Source
              ActionTypeId: 
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormationStackSet
              Configuration: 
                StackSetName: !Ref StackSetName
                TemplatePath: SmokeTest_Source::huit-public-resources-child-account.yml
                DeploymentTargets: !Ref AccountNumber
                Regions: us-east-1
                PermissionModel: SELF_MANAGED
                Capabilities: 'CAPABILITY_IAM,CAPABILITY_NAMED_IAM'
                AdministrationRoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/AWSCloudFormationStackSetAdministrationRole
                ExecutionRoleName: AWSCloudFormationStackSetExecutionRole 
                Parameters: SmokeTest_Source::stackset_params.json                                  

        - Name: ValidationTestStack
          Actions:
            - Name: CodeBuild
              InputArtifacts:
                - Name: SmokeTest_Source
              ActionTypeId: 
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                - Name: Built-Smoke
              Configuration: 
                ProjectName: !Ref CodeBuild

        - Name: DeleteExistingStack
          Actions:
            - Name: DeleteExistingTempStack
              InputArtifacts:
                - Name: SmokeTest_Source            
              ActionTypeId: 
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration: 
                ActionMode: DELETE_ONLY
                RoleArn: !Sub "${CodePipelineCloudFormationRole.Arn}"
                StackName: !Sub "${ApplicationName}-prod"

        - Name: DeleteStackset
          Actions:
            - Name: DeleteExistingTempChildStack
              InputArtifacts:
                - Name: SmokeTest_Source    # This should be in the smoke test artifacts
              ActionTypeId: 
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration: 
                ProjectName: !Ref CodeBuildDeleteStacks

  CodeBuildDeleteStacks:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: DeleteStackInstance
      Description: Delete Stack Instance
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-stackset.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:3.0'
        Type: LINUX_CONTAINER
      Artifacts:
        Name: DeleteArtifacts
        Type: CODEPIPELINE                                

  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref ApplicationName
      Description: "Build project for the application"
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: ARTIFACT_S3_BUCKET
            Value: !Ref S3Builds
          - Name: APPLICATION_NAME
            Value: !Ref ApplicationName
      Artifacts:
        Name: !Ref ApplicationName
        Type: CODEPIPELINE
        
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties: 
      Path: /
      RoleName: !Sub "${ApplicationName}-codepipeline-${AWS::Region}"
      AssumeRolePolicyDocument: 
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns: 
        - !Ref AssumeRolePolicy              
      Policies: 
        - PolicyName: !Sub "${ApplicationName}-codepipeline-${AWS::Region}"
          PolicyDocument: 
            Statement:
              - Effect: "Allow"
                Resource:
                  - !Sub "arn:aws:s3:::${S3Builds}/*"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
              - Effect: "Allow"
                Resource: "*"
                Action:
                  - "codedeploy:CreateDeployment"
                  - "codedeploy:GetApplicationRevision"
                  - "codedeploy:GetDeployment"
                  - "codedeploy:GetDeploymentConfig"
                  - "codedeploy:RegisterApplicationRevision"
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                  - "iam:PassRole"
              - Effect: "Allow"
                Resource: "*"
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                  - "cloudformation:ListStackSetOperationResults"
                  - "cloudformation:ListStackSetOperations"
                  - "cloudformation:ListStackSets"
                  - "cloudformation:DescribeStackSet"
                  - "cloudformation:DescribeStackSetOperation"
                  - "cloudformation:CreateStackSet"
                  - "cloudformation:DeleteStackSet"
                  - "cloudformation:StopStackSetOperation"
                  - "cloudformation:UpdateStackSet"
                  - "cloudformation:CreateStackInstances"
                  - "cloudformation:DeleteStackInstances"
                  - "cloudformation:DescribeStackInstance"
                  - "cloudformation:ListStackInstances"
                  - "cloudformation:UpdateStackInstances"                  

  CodePipelineCloudFormationRole:
    Type: AWS::IAM::Role
    Properties: 
      Path: /
      RoleName: !Sub "${ApplicationName}-cfn-${AWS::Region}"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: !Sub "${ApplicationName}-cfn-${AWS::Region}"
          PolicyDocument:
            Statement:
              - Effect: "Allow"
                Resource: "*"
                Action:
                  - "*"

  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Ref ApplicationName
      ComputePlatform: Server
          
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties: 
      Path: /
      RoleName: !Sub "${ApplicationName}-codedeploy-${AWS::Region}"
      AssumeRolePolicyDocument: 
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "codedeploy.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties: 
      Path: /
      RoleName: !Sub "${ApplicationName}-codebuild-${AWS::Region}"
      AssumeRolePolicyDocument: 
        Statement:
          - Effect: "Allow"
            Principal: 
              Service: "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns: 
        - !Ref AssumeRolePolicy
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess               
      Policies: 
        - PolicyName: !Sub "${ApplicationName}-codebuild-${AWS::Region}"
          PolicyDocument:
            Statement:
              - Effect: "Allow"
                Resource: "*"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
              - Effect: "Allow"
                Resource: 
                  - !Sub "arn:aws:s3:::${S3Builds}/*"
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
              - Effect: "Allow"
                Resource: "*"
                Action:
                  - "codedeploy:CreateDeployment"
                  - "codedeploy:GetApplicationRevision"
                  - "codedeploy:GetDeployment"
                  - "codedeploy:GetDeploymentConfig"
                  - "codedeploy:RegisterApplicationRevision"
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                  - "codebuild:*"
                  - "iam:PassRole"
              - Effect: "Allow"
                Resource: "*"
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                  - "cloudformation:ListStackSetOperationResults"
                  - "cloudformation:ListStackSetOperations"
                  - "cloudformation:ListStackSets"
                  - "cloudformation:DescribeStackSet"
                  - "cloudformation:DescribeStackSetOperation"
                  - "cloudformation:CreateStackSet"
                  - "cloudformation:DeleteStackSet"
                  - "cloudformation:StopStackSetOperation"
                  - "cloudformation:UpdateStackSet"
                  - "cloudformation:CreateStackInstances"
                  - "cloudformation:DeleteStackInstances"
                  - "cloudformation:DescribeStackInstance"
                  - "cloudformation:ListStackInstances"
                  - "cloudformation:UpdateStackInstances"                  

  AssumeRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - 
          Effect: Allow
          Action:
          - sts:AssumeRole
          Resource:
          - "*"

  CodeBuildTrigger:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: Build-Trigger
      Description: "Build project to trigger CodePipeline"
      ServiceRole: !Ref CodePipelineTriggerRole
      Artifacts:
        Type: NO_ARTIFACTS
      Source:
        BuildSpec: !Sub |
            version: 0.2
            
            phases:
              build:
                commands:
                   - aws codepipeline start-pipeline-execution --name ${CodePipeline}        
        Auth:
          Type: OAUTH
          Resource: !Ref GitHubOAuthToken
        Location: !Ref GitHubRepositoryUrl
        Type: GITHUB
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PULL_REQUEST_CREATED
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER

  CodePipelineTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: Build-Trigger
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: 
              - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CodePipelineExecutionRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - codepipeline:StartPipelineExecution
        - PolicyName: CloudwatchLogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DeleteLogGroup
                  - logs:CreateLogGroup
                  - logs:DeleteLogStream
                  - logs:PutLogEvents
                Resource: '*'                                             

Outputs:
  CodePipelineURL:
    Description: "The URL to access the deployment pipeline"
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${ApplicationName}"

  CodeDeployApplication:
    Description: "The CodeDeploy application used across all environments"
    Value: !Ref CodeDeployApplication
    Export:
      Name: !Sub "CodeDeployApplication-${ApplicationName}"

  CodeDeployServiceRoleArn:
    Description: "The CodeDeploy service role used across all environments"
    Value: !GetAtt CodeDeployServiceRole.Arn
    Export:
      Name: !Sub "CodeDeployServiceRoleArn-${ApplicationName}"


          





                 

  
